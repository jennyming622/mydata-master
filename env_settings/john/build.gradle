import org.gradle.plugins.ide.eclipse.model.AccessRule
/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'wesleyzhuang' at '2016/11/20 下午 8:13' with Gradle 3.2
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2/userguide/tutorial_java_projects.html
 */
// mybatis generator
plugins{
	id "com.arenagod.gradle.MybatisGenerator" version "1.4"
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

// JDK
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	//javax
	compile 'javax.activation:activation:1.1.1'
	compile 'javax.annotation:javax.annotation-api:1.3.2'
	compile 'javax.xml.bind:jaxb-api:2.3.1'
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'javax.inject:javax.inject:1'
	compile 'javax.servlet:jstl:1.2'
	compile 'javax.validation:validation-api:2.0.0.Final'

	//apache commons
	compile 'commons-beanutils:commons-beanutils:1.9.2'
	compile 'commons-logging:commons-logging:1.0.4'
	compile 'commons-collections:commons-collections:3.2.2'
	compile 'commons-codec:commons-codec:1.10'
	compile 'commons-io:commons-io:2.5'
	compile 'commons-validator:commons-validator:1.5.1'
	compile 'commons-fileupload:commons-fileupload:1.3.2'
	compile 'org.apache.commons:commons-dbcp2:2.1.1'
	compile 'org.apache.httpcomponents:httpclient:4.5.2'
	compile 'org.apache.commons:commons-email:1.4'
	compile 'org.apache.commons:commons-math3:3.6.1'
	compile 'org.apache.commons:commons-pool2:2.4.2'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.commons:commons-text:1.1'
	compile group: 'axis', name: 'axis', version: '1.4'
	// The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.21'
	runtime 'org.slf4j:jcl-over-slf4j:1.7.21'
	runtime 'org.slf4j:jul-to-slf4j:1.7.21'
	runtime 'org.slf4j:slf4j-log4j12:1.7.21'
	runtime 'log4j:log4j:1.2.17'

	//logback
	compile 'ch.qos.logback:logback-core:1.1.7'
	compile 'ch.qos.logback:logback-classic:1.1.7'

	//PostgreSQL JDBC driver
	runtime 'org.postgresql:postgresql:9.4.1208.jre7'
	//mybatis
	compile 'org.mybatis:mybatis:3.4.0'
	compile 'org.mybatis:mybatis-spring:1.3.0'

	//jackson
	compile 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
	//dom4j
	compile 'org.dom4j:dom4j:2.0.0'
	//quartz
	compile 'org.quartz-scheduler:quartz:2.2.2'

	//spring
	compile 'org.springframework:spring-web:5.0.6.RELEASE'
	compile 'org.springframework:spring-webmvc:5.0.6.RELEASE'
	compile 'org.springframework:spring-context-support:5.0.6.RELEASE'
	compile 'org.springframework:spring-tx:5.0.6.RELEASE'
	compile 'org.springframework:spring-jdbc:5.0.6.RELEASE'
	compile 'org.springframework:spring-test:5.0.6.RELEASE'
	compile 'org.springframework.security:spring-security-core:5.0.5.RELEASE'
	compile 'org.springframework.security:spring-security-web:5.0.5.RELEASE'
	compile 'org.springframework.security:spring-security-config:5.0.5.RELEASE'
	compile 'org.springframework.security:spring-security-openid:5.0.5.RELEASE'
	compile 'org.springframework.security:spring-security-crypto:5.0.5.RELEASE'
	compile 'org.springframework.security:spring-security-messaging:5.0.5.RELEASE'
	//spring-session
	compile 'org.springframework.session:spring-session-jdbc:2.3.0.RELEASE'
	compile group: 'com.h2database', name: 'h2', version: '1.4.199'

	//pac4j OIDC openid connect
	//compile 'org.pac4j:pac4j-oidc:jar:2.1.0'

	// https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
	compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.2.4.Final'

	//thymeleaf
	compile 'org.thymeleaf:thymeleaf:3.0.2.RELEASE'
	compile 'org.thymeleaf:thymeleaf-spring4:3.0.2.RELEASE'
	compile 'org.thymeleaf:thymeleaf-testing:3.0.1.RELEASE'
	compile 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.0.RELEASE'
	compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.0.RELEASE'
	compile 'com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute:2.0.1'

	//im4java, ImageMagick Java Lib
	compile 'org.im4java:im4java:1.4.0'
	//Imgscalr - A Java Image Scaling Library
	compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
	//guava
	compile 'com.google.guava:guava:20.0'
	//itextpdf
	compile 'com.itextpdf:itextpdf:5.5.12'
	compile 'com.itextpdf:itext-asian:5.2.0'
	//ftp
	compile group: 'commons-net', name: 'commons-net', version: '3.3'
	//zip
	compile group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'

	//JJWT
	compile 'io.jsonwebtoken:jjwt-api:0.10.6'
	compile 'io.jsonwebtoken:jjwt-impl:0.10.6'
	compile 'io.jsonwebtoken:jjwt-jackson:0.10.6'
	// jose4j
	compile 'org.bitbucket.b_c:jose4j:0.7.0'
	//com.google.guava
	compile 'com.google.guava:guava:27.1-jre'
	//@Grab(group='commons-codec', module='commons-codec', version='1.12')
	compile 'commons-codec:commons-codec:1.12'
	//@Grab(group='dom4j', module='dom4j', version='1.6.1')
	compile 'dom4j:dom4j:1.6.1'

	compile group: 'no.difi.commons', name: 'commons-certvalidator', version: '2.1.1'
	compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '9.4.27.v20200227'
	//本地端的jar
	compile fileTree(dir: 'lib', include: '*.jar')
	//compile fileTree(dir: 'WebContent/WEB-INF/lib', include: '*.jar')

	// https://mvnrepository.com/artifact/ca.juliusdavies/not-yet-commons-ssl
	compile group: 'ca.juliusdavies', name: 'not-yet-commons-ssl', version: '0.3.11'
	// mybatis generator
	compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version:'1.4.0'
	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
}

javadoc {
	options.charSet = 'UTF-8'
}

//pack war
war {
	from 'WebContent'		//設置 WebApp 根目錄
	baseName = 'mydata'
//	webXml = file('WebContent/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
}

//task rootWar(type: War) {
//	baseName = 'ROOT'
//	version = ''
//}

//For Eclipse IDE only
eclipse {
	wtp {
		component {
			//define context path, default to project folder name
			contextPath = 'mydata'
			//configure the deployName
			deployName = 'mydata'
			//you can add a wb-resource elements; mandatory keys: 'sourcePath', 'deployPath':
			//if sourcePath points to non-existing folder it will *not* be added.
			resource sourcePath: 'WebContent', deployPath: '/'
		}
	}
	classpath {
		file {
			whenMerged {
				def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
				jre.accessRules.add(new AccessRule('0', 'sun/security/**'))
				jre.accessRules.add(new AccessRule('0', 'sun/net/**'))
			}
		}
	}
}

//讀取外部參數env並加入system.properties
def loadConfiguration() {
	def environment = hasProperty('env') ? env : 'local'
	System.setProperty('environment', environment)
}
//依照environemnt設定，將相關的檔案copy到resource目錄
task copyConfiguration {
	doLast {
		def environment = System.properties['environment']
		println "Target Environment: ${environment}"
		// common.properties
		copy {
			from "environment/common-${environment}.properties"
			into "src/main/resources/conf/"
			include("common-${environment}.properties")
			rename ("common-${environment}.properties", 'common.properties')
		}
		// logback.xml
		copy {
			from "environment/logback-${environment}.xml"
			into "src/main/resources/"
			include("logback-${environment}.xml")
			rename ("logback-${environment}.xml", 'logback.xml')
		}
		// META-INF
		copy {
			from 'build/resources/main/META-INF'
			into 'src/main/resources/META-INF'
		}
	}
}
//依環境參數讀取設定檔
loadConfiguration()
//執行processResources之前先執行copyConfiguration
processResources.dependsOn copyConfiguration

//回復到local的環境設定
task env_local {
	env_local.finalizedBy copyConfiguration
}

configurations {
	mybatisGenerator
}

mybatisGenerator {
	verbose = true
	configFile = '/Users/zhanqianjin/RieasePlace/mydata/mybatis/GeneratorConfig.xml'
}



package tw.gov.ndc.emsg.mydata.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class VerifyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public VerifyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> uidCriteria;
		protected List<Criterion> allCriteria;
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
			uidCriteria = new ArrayList<Criterion>();
		}

		public List<Criterion> getUidCriteria() {
			return uidCriteria;
		}

		protected void addUidCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			uidCriteria.add(new Criterion(condition, value, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		protected void addUidCriterion(String condition, String value1, String value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			uidCriteria.add(new Criterion(condition, value1, value2, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		public boolean isValid() {
			return criteria.size() > 0 || uidCriteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			if (allCriteria == null) {
				allCriteria = new ArrayList<Criterion>();
				allCriteria.addAll(criteria);
				allCriteria.addAll(uidCriteria);
			}
			return allCriteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
			allCriteria = null;
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
			allCriteria = null;
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
			allCriteria = null;
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andKeyIsNull() {
			addCriterion("key is null");
			return (Criteria) this;
		}

		public Criteria andKeyIsNotNull() {
			addCriterion("key is not null");
			return (Criteria) this;
		}

		public Criteria andKeyEqualTo(String value) {
			addCriterion("key =", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyNotEqualTo(String value) {
			addCriterion("key <>", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyGreaterThan(String value) {
			addCriterion("key >", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyGreaterThanOrEqualTo(String value) {
			addCriterion("key >=", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyLessThan(String value) {
			addCriterion("key <", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyLessThanOrEqualTo(String value) {
			addCriterion("key <=", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyLike(String value) {
			addCriterion("key like", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyNotLike(String value) {
			addCriterion("key not like", value, "key");
			return (Criteria) this;
		}

		public Criteria andKeyIn(List<String> values) {
			addCriterion("key in", values, "key");
			return (Criteria) this;
		}

		public Criteria andKeyNotIn(List<String> values) {
			addCriterion("key not in", values, "key");
			return (Criteria) this;
		}

		public Criteria andKeyBetween(String value1, String value2) {
			addCriterion("key between", value1, value2, "key");
			return (Criteria) this;
		}

		public Criteria andKeyNotBetween(String value1, String value2) {
			addCriterion("key not between", value1, value2, "key");
			return (Criteria) this;
		}

		public Criteria andCtimeIsNull() {
			addCriterion("ctime is null");
			return (Criteria) this;
		}

		public Criteria andCtimeIsNotNull() {
			addCriterion("ctime is not null");
			return (Criteria) this;
		}

		public Criteria andCtimeEqualTo(Date value) {
			addCriterion("ctime =", value, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeNotEqualTo(Date value) {
			addCriterion("ctime <>", value, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeGreaterThan(Date value) {
			addCriterion("ctime >", value, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("ctime >=", value, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeLessThan(Date value) {
			addCriterion("ctime <", value, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeLessThanOrEqualTo(Date value) {
			addCriterion("ctime <=", value, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeIn(List<Date> values) {
			addCriterion("ctime in", values, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeNotIn(List<Date> values) {
			addCriterion("ctime not in", values, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeBetween(Date value1, Date value2) {
			addCriterion("ctime between", value1, value2, "ctime");
			return (Criteria) this;
		}

		public Criteria andCtimeNotBetween(Date value1, Date value2) {
			addCriterion("ctime not between", value1, value2, "ctime");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(String value) {
			addUidCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(String value) {
			addUidCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(String value) {
			addUidCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(String value) {
			addUidCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(String value) {
			addUidCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(String value) {
			addUidCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLike(String value) {
			addUidCriterion("uid like", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotLike(String value) {
			addUidCriterion("uid not like", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<String> values) {
			addUidCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<String> values) {
			addUidCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(String value1, String value2) {
			addUidCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(String value1, String value2) {
			addUidCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andBirthdateIsNull() {
			addCriterion("birthdate is null");
			return (Criteria) this;
		}

		public Criteria andBirthdateIsNotNull() {
			addCriterion("birthdate is not null");
			return (Criteria) this;
		}

		public Criteria andBirthdateEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate =", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate <>", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateGreaterThan(Date value) {
			addCriterionForJDBCDate("birthdate >", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate >=", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateLessThan(Date value) {
			addCriterionForJDBCDate("birthdate <", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate <=", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateIn(List<Date> values) {
			addCriterionForJDBCDate("birthdate in", values, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("birthdate not in", values, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("birthdate between", value1, value2, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("birthdate not between", value1, value2, "birthdate");
			return (Criteria) this;
		}

		public Criteria andCheckLevelIsNull() {
			addCriterion("check_level is null");
			return (Criteria) this;
		}

		public Criteria andCheckLevelIsNotNull() {
			addCriterion("check_level is not null");
			return (Criteria) this;
		}

		public Criteria andCheckLevelEqualTo(String value) {
			addCriterion("check_level =", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelNotEqualTo(String value) {
			addCriterion("check_level <>", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelGreaterThan(String value) {
			addCriterion("check_level >", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelGreaterThanOrEqualTo(String value) {
			addCriterion("check_level >=", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelLessThan(String value) {
			addCriterion("check_level <", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelLessThanOrEqualTo(String value) {
			addCriterion("check_level <=", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelLike(String value) {
			addCriterion("check_level like", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelNotLike(String value) {
			addCriterion("check_level not like", value, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelIn(List<String> values) {
			addCriterion("check_level in", values, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelNotIn(List<String> values) {
			addCriterion("check_level not in", values, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelBetween(String value1, String value2) {
			addCriterion("check_level between", value1, value2, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andCheckLevelNotBetween(String value1, String value2) {
			addCriterion("check_level not between", value1, value2, "checkLevel");
			return (Criteria) this;
		}

		public Criteria andScopeIsNull() {
			addCriterion("scope is null");
			return (Criteria) this;
		}

		public Criteria andScopeIsNotNull() {
			addCriterion("scope is not null");
			return (Criteria) this;
		}

		public Criteria andScopeEqualTo(String value) {
			addCriterion("scope =", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeNotEqualTo(String value) {
			addCriterion("scope <>", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeGreaterThan(String value) {
			addCriterion("scope >", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeGreaterThanOrEqualTo(String value) {
			addCriterion("scope >=", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeLessThan(String value) {
			addCriterion("scope <", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeLessThanOrEqualTo(String value) {
			addCriterion("scope <=", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeLike(String value) {
			addCriterion("scope like", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeNotLike(String value) {
			addCriterion("scope not like", value, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeIn(List<String> values) {
			addCriterion("scope in", values, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeNotIn(List<String> values) {
			addCriterion("scope not in", values, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeBetween(String value1, String value2) {
			addCriterion("scope between", value1, value2, "scope");
			return (Criteria) this;
		}

		public Criteria andScopeNotBetween(String value1, String value2) {
			addCriterion("scope not between", value1, value2, "scope");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table verify
	 * @mbg.generated  Tue Feb 11 15:12:01 CST 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table verify
     *
     * @mbg.generated do_not_delete_during_merge Wed May 08 14:41:52 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
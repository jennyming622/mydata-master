package tw.gov.ndc.emsg.mydata.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class MemberTempExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public MemberTempExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> nameCriteria;
		protected List<Criterion> uidCriteria;
		protected List<Criterion> emailCriteria;
		protected List<Criterion> mobileCriteria;
		protected List<Criterion> allCriteria;
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
			nameCriteria = new ArrayList<Criterion>();
			uidCriteria = new ArrayList<Criterion>();
			emailCriteria = new ArrayList<Criterion>();
			mobileCriteria = new ArrayList<Criterion>();
		}

		public List<Criterion> getNameCriteria() {
			return nameCriteria;
		}

		protected void addNameCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			nameCriteria.add(new Criterion(condition, value, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		protected void addNameCriterion(String condition, String value1, String value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			nameCriteria.add(new Criterion(condition, value1, value2, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		public List<Criterion> getUidCriteria() {
			return uidCriteria;
		}

		protected void addUidCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			uidCriteria.add(new Criterion(condition, value, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		protected void addUidCriterion(String condition, String value1, String value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			uidCriteria.add(new Criterion(condition, value1, value2, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		public List<Criterion> getEmailCriteria() {
			return emailCriteria;
		}

		protected void addEmailCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			emailCriteria.add(new Criterion(condition, value, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		protected void addEmailCriterion(String condition, String value1, String value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			emailCriteria.add(new Criterion(condition, value1, value2, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		public List<Criterion> getMobileCriteria() {
			return mobileCriteria;
		}

		protected void addMobileCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			mobileCriteria.add(new Criterion(condition, value, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		protected void addMobileCriterion(String condition, String value1, String value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			mobileCriteria
					.add(new Criterion(condition, value1, value2, "tw.gov.ndc.emsg.dbencrypt.EncryptTypeHandler"));
			allCriteria = null;
		}

		public boolean isValid() {
			return criteria.size() > 0 || nameCriteria.size() > 0 || uidCriteria.size() > 0 || emailCriteria.size() > 0
					|| mobileCriteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			if (allCriteria == null) {
				allCriteria = new ArrayList<Criterion>();
				allCriteria.addAll(criteria);
				allCriteria.addAll(nameCriteria);
				allCriteria.addAll(uidCriteria);
				allCriteria.addAll(emailCriteria);
				allCriteria.addAll(mobileCriteria);
			}
			return allCriteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
			allCriteria = null;
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
			allCriteria = null;
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
			allCriteria = null;
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andAccountIsNull() {
			addCriterion("account is null");
			return (Criteria) this;
		}

		public Criteria andAccountIsNotNull() {
			addCriterion("account is not null");
			return (Criteria) this;
		}

		public Criteria andAccountEqualTo(String value) {
			addCriterion("account =", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotEqualTo(String value) {
			addCriterion("account <>", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThan(String value) {
			addCriterion("account >", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThanOrEqualTo(String value) {
			addCriterion("account >=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThan(String value) {
			addCriterion("account <", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThanOrEqualTo(String value) {
			addCriterion("account <=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLike(String value) {
			addCriterion("account like", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotLike(String value) {
			addCriterion("account not like", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountIn(List<String> values) {
			addCriterion("account in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotIn(List<String> values) {
			addCriterion("account not in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountBetween(String value1, String value2) {
			addCriterion("account between", value1, value2, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotBetween(String value1, String value2) {
			addCriterion("account not between", value1, value2, "account");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addNameCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addNameCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addNameCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addNameCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addNameCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addNameCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addNameCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addNameCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addNameCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addNameCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addNameCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addNameCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andBirthdateIsNull() {
			addCriterion("birthdate is null");
			return (Criteria) this;
		}

		public Criteria andBirthdateIsNotNull() {
			addCriterion("birthdate is not null");
			return (Criteria) this;
		}

		public Criteria andBirthdateEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate =", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate <>", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateGreaterThan(Date value) {
			addCriterionForJDBCDate("birthdate >", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate >=", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateLessThan(Date value) {
			addCriterionForJDBCDate("birthdate <", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("birthdate <=", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateIn(List<Date> values) {
			addCriterionForJDBCDate("birthdate in", values, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("birthdate not in", values, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("birthdate between", value1, value2, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("birthdate not between", value1, value2, "birthdate");
			return (Criteria) this;
		}

		public Criteria andGenderIsNull() {
			addCriterion("gender is null");
			return (Criteria) this;
		}

		public Criteria andGenderIsNotNull() {
			addCriterion("gender is not null");
			return (Criteria) this;
		}

		public Criteria andGenderEqualTo(String value) {
			addCriterion("gender =", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotEqualTo(String value) {
			addCriterion("gender <>", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderGreaterThan(String value) {
			addCriterion("gender >", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderGreaterThanOrEqualTo(String value) {
			addCriterion("gender >=", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderLessThan(String value) {
			addCriterion("gender <", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderLessThanOrEqualTo(String value) {
			addCriterion("gender <=", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderLike(String value) {
			addCriterion("gender like", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotLike(String value) {
			addCriterion("gender not like", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderIn(List<String> values) {
			addCriterion("gender in", values, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotIn(List<String> values) {
			addCriterion("gender not in", values, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderBetween(String value1, String value2) {
			addCriterion("gender between", value1, value2, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotBetween(String value1, String value2) {
			addCriterion("gender not between", value1, value2, "gender");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(String value) {
			addUidCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(String value) {
			addUidCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(String value) {
			addUidCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(String value) {
			addUidCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(String value) {
			addUidCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(String value) {
			addUidCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLike(String value) {
			addUidCriterion("uid like", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotLike(String value) {
			addUidCriterion("uid not like", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<String> values) {
			addUidCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<String> values) {
			addUidCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(String value1, String value2) {
			addUidCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(String value1, String value2) {
			addUidCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedIsNull() {
			addCriterion("uid_verified is null");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedIsNotNull() {
			addCriterion("uid_verified is not null");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedEqualTo(Boolean value) {
			addCriterion("uid_verified =", value, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedNotEqualTo(Boolean value) {
			addCriterion("uid_verified <>", value, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedGreaterThan(Boolean value) {
			addCriterion("uid_verified >", value, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("uid_verified >=", value, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedLessThan(Boolean value) {
			addCriterion("uid_verified <", value, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedLessThanOrEqualTo(Boolean value) {
			addCriterion("uid_verified <=", value, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedIn(List<Boolean> values) {
			addCriterion("uid_verified in", values, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedNotIn(List<Boolean> values) {
			addCriterion("uid_verified not in", values, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedBetween(Boolean value1, Boolean value2) {
			addCriterion("uid_verified between", value1, value2, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andUidVerifiedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("uid_verified not between", value1, value2, "uidVerified");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("email is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("email is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addEmailCriterion("email =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addEmailCriterion("email <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addEmailCriterion("email >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addEmailCriterion("email >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addEmailCriterion("email <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addEmailCriterion("email <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addEmailCriterion("email like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addEmailCriterion("email not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addEmailCriterion("email in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addEmailCriterion("email not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addEmailCriterion("email between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addEmailCriterion("email not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedIsNull() {
			addCriterion("email_verified is null");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedIsNotNull() {
			addCriterion("email_verified is not null");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedEqualTo(Boolean value) {
			addCriterion("email_verified =", value, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedNotEqualTo(Boolean value) {
			addCriterion("email_verified <>", value, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedGreaterThan(Boolean value) {
			addCriterion("email_verified >", value, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("email_verified >=", value, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedLessThan(Boolean value) {
			addCriterion("email_verified <", value, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedLessThanOrEqualTo(Boolean value) {
			addCriterion("email_verified <=", value, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedIn(List<Boolean> values) {
			addCriterion("email_verified in", values, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedNotIn(List<Boolean> values) {
			addCriterion("email_verified not in", values, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedBetween(Boolean value1, Boolean value2) {
			addCriterion("email_verified between", value1, value2, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andEmailVerifiedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("email_verified not between", value1, value2, "emailVerified");
			return (Criteria) this;
		}

		public Criteria andMobileIsNull() {
			addCriterion("mobile is null");
			return (Criteria) this;
		}

		public Criteria andMobileIsNotNull() {
			addCriterion("mobile is not null");
			return (Criteria) this;
		}

		public Criteria andMobileEqualTo(String value) {
			addMobileCriterion("mobile =", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileNotEqualTo(String value) {
			addMobileCriterion("mobile <>", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileGreaterThan(String value) {
			addMobileCriterion("mobile >", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileGreaterThanOrEqualTo(String value) {
			addMobileCriterion("mobile >=", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileLessThan(String value) {
			addMobileCriterion("mobile <", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileLessThanOrEqualTo(String value) {
			addMobileCriterion("mobile <=", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileLike(String value) {
			addMobileCriterion("mobile like", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileNotLike(String value) {
			addMobileCriterion("mobile not like", value, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileIn(List<String> values) {
			addMobileCriterion("mobile in", values, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileNotIn(List<String> values) {
			addMobileCriterion("mobile not in", values, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileBetween(String value1, String value2) {
			addMobileCriterion("mobile between", value1, value2, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileNotBetween(String value1, String value2) {
			addMobileCriterion("mobile not between", value1, value2, "mobile");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedIsNull() {
			addCriterion("mobile_verified is null");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedIsNotNull() {
			addCriterion("mobile_verified is not null");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedEqualTo(Boolean value) {
			addCriterion("mobile_verified =", value, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedNotEqualTo(Boolean value) {
			addCriterion("mobile_verified <>", value, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedGreaterThan(Boolean value) {
			addCriterion("mobile_verified >", value, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("mobile_verified >=", value, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedLessThan(Boolean value) {
			addCriterion("mobile_verified <", value, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedLessThanOrEqualTo(Boolean value) {
			addCriterion("mobile_verified <=", value, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedIn(List<Boolean> values) {
			addCriterion("mobile_verified in", values, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedNotIn(List<Boolean> values) {
			addCriterion("mobile_verified not in", values, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedBetween(Boolean value1, Boolean value2) {
			addCriterion("mobile_verified between", value1, value2, "mobileVerified");
			return (Criteria) this;
		}

		public Criteria andMobileVerifiedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("mobile_verified not between", value1, value2, "mobileVerified");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table member_temp
	 * @mbg.generated  Thu Feb 06 17:44:28 CST 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member_temp
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 06 10:50:34 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}